(function(){"use strict";let a="";const b=new Map,c=new Map,d=new Map([["text",new Set(["txt","html","js","svg"])],["json",new Set(["json"])],["binary",new Set(["bin"])],["image",new Set(["png","jpg","gif"])],["video",new Set(["mp4","webm"])],["audio",new Set(["mp3","ogg"])],["style",new Set(["css"])],["font",new Set(["woff","woff2","ttf"])]]);class e{static get onLoad(){return Promise.all(b.values())}static get promises(){return b}static get typeMap(){return d}static get(a){return c.get(a)}static get baseURI(){return a}static set baseURI(b){a=b}static load(f){const g=f instanceof Array;g||(f=[f]);let h=[];for(let g of f){if(!g)continue;let f;"object"==typeof g&&(f=g.type,g=g.value);const i=`${a}${"string"==typeof g?g:g.href||g.src}`,j=/[\\/](.*)\.(.*)$/.exec(i)[2];if(!f)for(const[a,b]of d)if(b.has(j)){f=a;break}let k=new Promise(function(d){return b.get(g)?void b.get(g).then(d):e.get(g)?void d(e.get(g)):void fetch(`${a}${i}`).catch(()=>new Promise(function(b){const c=new XMLHttpRequest;c.onload=function(){b(new Response(c.responseText,{status:c.status}))},c.open("GET",`${a}${i}`),c.send(null)})).then((a)=>"text"===f?a.text():"json"===f?a.json():"binary"===f?a.arrayBuffer():"image"===f?new Promise((a)=>{const b=document.createElement("img");b.onload=()=>{a(b)},b.src=i}):"video"===f||"audio"===f?new Promise((a)=>{const b=document.createElement(f);b.oncanplaythrough=()=>{a(b)},b.src=i}):"style"===f?new Promise((a)=>{const b=document.createElement("link");b.rel="stylesheet",b.type="text/css",b.onload=()=>{a(b)},document.head.appendChild(b),b.href=i}):"font"===f?new Promise(()=>{let a=new FontFace(/([^\/]*)\.(woff|woff2|ttf)$/.exec(g)[1],`url("${g}")`);return document.fonts.add(a),a.load()}):"template"===f?a.text().then((a)=>{const b=document.createElement("template");return b.innerHTML=a,b}):a.blob()).then((a)=>{b.delete(g),c.set(g,a),d(a)})});h.push(k),b.set(g,k)}return g?Promise.all(h):h[0]}}const f=Promise.all([e.load({value:"src/main/template.html",type:"template"}),e.load("src/main/index.css")]);window.customElements.define("dnit-main",class extends HTMLElement{connectedCallback(){f.then(([a])=>{let b=document.importNode(a.content,!0);this.appendChild(b)})}})})();